#include <iostream>
#include<iomanip>

using namespace std;


//int findMax(int arr[], int size)
//{
//
//	arr[0] = 15;
//	cout << arr[0] << endl;
//	return 0;
//};
//
//
//int findMax_1(int arr[], int size)
//{
//	int find_ = arr[0];
//
//	for (int i = 1; i < size; i++)
//	{
//		if (arr[i] > find_) find_ = arr[i];
//	}
//
//	{
//	
//	}
//	return find_;
//}



// randomfill funksiyasi
void randomFill(int arr[], int size, int min, int max)
{
	for (int i = 0; i < size; i++)
		arr[i] = min + rand() % (max - min + 1);
}

void printArray(int arr[], int size)
{
	for (int i = 0; i < size; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl;
}


int task_1_function(int arr[], int size)
{
	int count = 0;
	for (int i = 0; i < size; i++)
		if (arr[i] % 3 == 0 && arr[i] % 5 != 0) count++;
	
	return count;
}



int main()
{
	srand(time(0));
	/*
		funksiyaya  array gondermey


	*/

	//int array_[5]{ 1,2,3,4,5 };

	////cout << "Funksityadan evvel : " << array_[0] << endl;
	////findMax(array_, 5);
	////cout << "Funksityadan sonra : " << array_[0] << endl;

	//cout << findMax_1(array_, 5) << endl;


	////---------------------------------------
	//// scop
	//// deishenler

	//{
	//	//TRASk 1
	//	int a = 15;
	//	cout << a << endl;

	//}
	//
	//{
	//	//TRASk 1
	//	int a = 18;
	//	cout << a << endl;
	//}



	/*
		1) 1 və 100 arasında random rəqəmlərdən ibarət ölçüsü 10
			olan list yaradın. 3-ə bölünüb 5-ə bölünməyən
			rəqəmlərin sayını çıxarın.
			(eyni anda həm 3ə bölünsün, həm 5-ə bölünməsin)
	
	*/

	/*
	
	Funksiyanin ustunluyu
		1. Kodu seliqeli hala salir
		2. kod tekrarinin qarsisini alir
		3. kodu yixcam edir
		4. kodu daha oxunaqli edir
	
	*/

	int myArray[10]{};
	int min = 1;
	int max = 100;

	randomFill(myArray, 10, min, max);
	printArray(myArray, 10);

	int cvb = task_1_function(myArray, 10);
	cout << cvb << endl;
	printArray(myArray, 10);








	system("pause");
	return 0;
}
